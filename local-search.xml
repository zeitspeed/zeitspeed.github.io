<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Codefoces 1821B Sort the Subarray</title>
    <link href="/2023/05/04/Codefoces%201821B%20Sort%20the%20Subarray/"/>
    <url>/2023/05/04/Codefoces%201821B%20Sort%20the%20Subarray/</url>
    
    <content type="html"><![CDATA[<p>思维僵化复建ing，太久不写题想复杂了，最后借鉴了才恍然大悟。其实只要判断修改过的就可以了，在在此基础上向两侧延伸直到b数组不符合非降序即可</p><p>我原写的：</p><p>（样例也过了一些，但是改来改去始终卡）；；；</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,x;<br>    cin&gt;&gt;n;<br>    map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;mp;<br>    vector&lt;<span class="hljs-type">int</span>&gt;a,b;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;x;<br>        a.<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br>    a.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;x;<br>        b.<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br>    b.<span class="hljs-built_in">push_back</span>(<span class="hljs-number">0</span>);<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">0</span>,r=<span class="hljs-number">0</span>,maxv=<span class="hljs-number">0</span>,ml=<span class="hljs-number">0</span>,mr=<span class="hljs-number">0</span>;<br>    string as=<span class="hljs-string">&quot;&quot;</span>,bs=<span class="hljs-string">&quot;&quot;</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        mp[a[i]]++;<br>        mp[b[i]]++;<br>        as+=<span class="hljs-string">&#x27;0&#x27;</span>+a[i];<br>        bs+=<span class="hljs-string">&#x27;0&#x27;</span>+b[i];<br>        r=i;<br>        <span class="hljs-type">int</span> flag=<span class="hljs-number">0</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-keyword">auto</span> it:mp)&#123;<br>            <span class="hljs-keyword">if</span>(it.second%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>&amp;&amp;a[l]!=it.first)&#123;<br>                flag=<span class="hljs-number">1</span>;<br>                <span class="hljs-keyword">break</span>;<br>            &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(it.second%<span class="hljs-number">2</span>!=<span class="hljs-number">0</span>&amp;&amp;a[i]==it.first)&#123;<br>                l++;<br>            &#125;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(!flag&amp;&amp;maxv&lt;=(r-l)&amp;&amp;as!=bs)&#123;<br>            maxv=r-l;<br>            ml=l;<br>            mr=r;<br>        &#125;<br>        <span class="hljs-keyword">if</span>(b[i]&gt;b[i+<span class="hljs-number">1</span>]&amp;&amp;i!=n<span class="hljs-number">-1</span>)&#123;<br>            as=<span class="hljs-string">&quot;&quot;</span>;<br>            bs=<span class="hljs-string">&quot;&quot;</span>;<br>            l=r+<span class="hljs-number">1</span>;<br>            mp.<span class="hljs-built_in">clear</span>();<br>        &#125;<br>    &#125;<br>    cout&lt;&lt;ml+<span class="hljs-number">1</span>&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;mr+<span class="hljs-number">1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    std::cin.<span class="hljs-built_in">tie</span>(<span class="hljs-number">0</span>);<br>    std::ios::<span class="hljs-built_in">sync_with_stdio</span>(<span class="hljs-literal">false</span>);<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>        cout&lt;&lt;endl;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>借鉴后：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,x;<br>    cin&gt;&gt;n;<br>    vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">a</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>),<span class="hljs-built_in">b</span>(<span class="hljs-number">1</span>,<span class="hljs-number">0</span>);<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;x;<br>        a.<span class="hljs-built_in">push_back</span>(x);<br>    &#125;<br>    <span class="hljs-type">int</span> l=<span class="hljs-number">-1</span>,r=<span class="hljs-number">-1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;x;<br>        b.<span class="hljs-built_in">push_back</span>(x);<br>        <span class="hljs-keyword">if</span>(b[i]!=a[i]&amp;&amp;l==<span class="hljs-number">-1</span>)&#123;<br>            l=i;<br>        &#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(b[i]!=a[i]&amp;&amp;l!=<span class="hljs-number">-1</span>)&#123;<br>            r=i;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(l&gt;=<span class="hljs-number">0</span>)&#123;<br>        <span class="hljs-keyword">if</span>(b[l<span class="hljs-number">-1</span>]&gt;b[l])<span class="hljs-keyword">break</span>;<br>        l--;<br>    &#125;<br>    <span class="hljs-keyword">while</span>(r&lt;n)&#123;<br>        <span class="hljs-keyword">if</span>(b[r+<span class="hljs-number">1</span>]&lt;b[r])<span class="hljs-keyword">break</span>;<br>        r++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(l&lt;=<span class="hljs-number">0</span>)l=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">if</span>(r&gt;n)r=n;<br>    cout&lt;&lt;l&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;r&lt;&lt;endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>思维</tag>
      
      <tag>借鉴</tag>
      
      <tag>贪心</tag>
      
      <tag>codeforces:1100</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1823B Sort with Step</title>
    <link href="/2023/05/04/Codeforces1823B_Sort%20with%20Step/"/>
    <url>/2023/05/04/Codeforces1823B_Sort%20with%20Step/</url>
    
    <content type="html"><![CDATA[<p>c</p><p>此题用a存储原数组，b数组存储改数字当前位置，判断当前数字位置是否与这个数字应该在的位置间的差对k求余是否等于零即可判断是否需要强转。由于题目说原数组是数列，所以方法是可行的。</p><p>我之前甚至想了逆序对的做法，还是天马行空了</p><p>上代码：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">2e5</span>+<span class="hljs-number">10</span>;<br><span class="hljs-type">int</span> a[N],b[N];<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,k;<br>    cin&gt;&gt;n&gt;&gt;k;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        b[a[i]]=i;<br>    &#125;<br>    <span class="hljs-type">int</span> cnt=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=n;i++)&#123;<br>        <span class="hljs-type">int</span> c=<span class="hljs-built_in">abs</span>(b[i]-i);<br>        <span class="hljs-keyword">if</span>(c%k!=<span class="hljs-number">0</span>)cnt++;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(cnt==<span class="hljs-number">0</span>)cout&lt;&lt;<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(cnt&lt;=<span class="hljs-number">2</span>)cout&lt;&lt;<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-number">-1</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>        cout&lt;&lt;endl;<br>    &#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>ACM</category>
      
    </categories>
    
    
    <tags>
      
      <tag>思维</tag>
      
      <tag>codeforces:900</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>好想去珠海航展啊</title>
    <link href="/2022/11/16/%E5%90%90%E6%A7%BD/"/>
    <url>/2022/11/16/%E5%90%90%E6%A7%BD/</url>
    
    <content type="html"><![CDATA[<p>去年没去成，今年还是没去成，这傻鸟疫情😭</p><p>希望明年能去！🌏</p><p>博客的分类也该提上日程了，好多事要做。。</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1605C. Dominant Character</title>
    <link href="/2022/11/15/Codeforces%201605C.%20Dominant%20Character/"/>
    <url>/2022/11/15/Codeforces%201605C.%20Dominant%20Character/</url>
    
    <content type="html"><![CDATA[<p>Ashish has a string s<strong>s</strong> of length n<strong>n</strong> containing only characters ‘<strong>a</strong>‘, ‘<strong>b</strong>‘ and ‘<strong>c</strong>‘.</p><p>He wants to find the length of the smallest substring, which satisfies the following conditions:</p><ul><li>Length of the substring is <strong>at least</strong> 2<strong>2</strong></li><li>‘<strong>a</strong>‘ occurs strictly more times in this substring than ‘<strong>b</strong>‘</li><li>‘<strong>a</strong>‘ occurs strictly more times in this substring than ‘<strong>c</strong>‘</li></ul><p>Ashish is busy planning his next Codeforces round. Help him solve the problem.</p><p>A string a<strong>a</strong> is a substring of a string b<strong>b</strong> if a<strong>a</strong> can be obtained from b<strong>b</strong> by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.</p><p>InputThe first line contains a single integer t<strong>t</strong> (1 \le t \le 10^{5})<strong>(<strong>1</strong>≤</strong>t<strong>≤</strong>1<strong>0</strong>5**)**  — the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer n<strong>n</strong> (2 \le n \le 10^{6})<strong>(<strong>2</strong>≤</strong>n<strong>≤</strong>1<strong>0</strong>6**)**  — the length of the string s<strong>s</strong>.</p><p>The second line of each test case contains a string s<strong>s</strong> consisting only of characters ‘<strong>a</strong>‘, ‘<strong>b</strong>‘ and ‘<strong>c</strong>‘.</p><p>It is guaranteed that the sum of n<strong>n</strong> over all test cases does not exceed 10^{6}<strong>1</strong>0<strong>6</strong>.</p><p>OutputFor each test case, output the length of the smallest substring which satisfies the given conditions or print -1<strong>−</strong>1 if there is no such substring.</p><p>Sample 1</p><p>Input</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs">3<br>2<br>aa<br>5<br>cbabb<br>8<br>cacabccc<br></code></pre></td></tr></table></figure><p> output</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs diff">2<br><span class="hljs-deletion">-1</span><br>3<br></code></pre></td></tr></table></figure><p>note</p><p>NoteConsider the first test case. In the substring “<strong>aa</strong>“, ‘<strong>a</strong>‘ occurs twice, while ‘<strong>b</strong>‘ and ‘<strong>c</strong>‘ occur zero times. Since ‘<strong>a</strong>‘ occurs strictly more times than ‘<strong>b</strong>‘ and ‘<strong>c</strong>‘, the substring “<strong>aa</strong>“ satisfies the condition and the answer is 2<strong>2</strong>. The substring “<strong>a</strong>“ also satisfies this condition, however its length is not at least 2<strong>2</strong>.</p><p>In the second test case, it can be shown that in none of the substrings of “<strong>cbabb</strong>“ does ‘<strong>a</strong>‘ occur strictly more times than ‘<strong>b</strong>‘ and ‘<strong>c</strong>‘ each.</p><p>In the third test case, “<strong>c</strong>aca<strong>bccc</strong>“, the length of the smallest substring that satisfies the conditions is 3<strong>3</strong>.</p><p>code</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N=<span class="hljs-number">1e6</span>+<span class="hljs-number">7</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    string s;<br>    cin&gt;&gt;n&gt;&gt;s;<br>    vector&lt;<span class="hljs-type">int</span>&gt;a;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-keyword">if</span>(s[i]==<span class="hljs-string">&#x27;a&#x27;</span>)a.<span class="hljs-built_in">push_back</span>(i);<br>    &#125;<br>    <span class="hljs-keyword">if</span>(a.<span class="hljs-built_in">size</span>()&lt;<span class="hljs-number">2</span>)&#123;<br>        cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">int</span> minv=<span class="hljs-number">1000000</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;a.<span class="hljs-built_in">size</span>();i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]-a[i<span class="hljs-number">-1</span>]==<span class="hljs-number">3</span>)&#123;<br>            <span class="hljs-keyword">if</span>(s[a[i]<span class="hljs-number">-1</span>]!=s[a[i]<span class="hljs-number">-2</span>])&#123;<br>                minv=<span class="hljs-built_in">min</span>(minv,a[i]-a[i<span class="hljs-number">-1</span>]);<br>            &#125;<span class="hljs-keyword">else</span>&#123;<br>                <span class="hljs-keyword">if</span>(s[a[i]+<span class="hljs-number">1</span>]==s[a[i]+<span class="hljs-number">2</span>]&amp;&amp;s[a[i]+<span class="hljs-number">1</span>]!=s[a[i]<span class="hljs-number">-1</span>]&amp;&amp;a[i+<span class="hljs-number">1</span>]-a[i]==<span class="hljs-number">3</span>&amp;&amp; (i+<span class="hljs-number">1</span>)&lt;a.<span class="hljs-built_in">size</span>())&#123;<br>                    minv=<span class="hljs-built_in">min</span>(minv,a[i+<span class="hljs-number">1</span>]-a[i<span class="hljs-number">-1</span>]);<br>                &#125;<br>            &#125;<br>        &#125;<span class="hljs-keyword">else</span>&#123;<br>            <span class="hljs-keyword">if</span>(a[i]-a[i<span class="hljs-number">-1</span>]&lt;<span class="hljs-number">3</span>)&#123;<br>                 minv=<span class="hljs-built_in">min</span>(minv,a[i]-a[i<span class="hljs-number">-1</span>]);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(minv==<span class="hljs-number">1000000</span>)cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;minv+<span class="hljs-number">1</span>&lt;&lt;endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 39D. Cubical Planet</title>
    <link href="/2022/11/15/Codeforces%2039D.%20Cubical%20Planet/"/>
    <url>/2022/11/15/Codeforces%2039D.%20Cubical%20Planet/</url>
    
    <content type="html"><![CDATA[<p>You can find anything whatsoever in our Galaxy! A cubical planet goes round an icosahedral star. Let us introduce a system of axes so that the edges of the cubical planet are parallel to the coordinate axes and two opposite vertices lay in the points <strong>(0, 0, 0)</strong> and <strong>(1, 1, 1)</strong>. Two flies live on the planet. At the moment they are sitting on two different vertices of the cubical planet. Your task is to determine whether they see each other or not. The flies see each other when the vertices they occupy lie on the same face of the cube.</p><p>InputThe first line contains three space-separated integers (<strong>0</strong> or <strong>1</strong>) — the coordinates of the first fly, the second line analogously contains the coordinates of the second fly.</p><p>OutputOutput “YES” (without quotes) if the flies see each other. Otherwise, output “NO”.</p><p>Sample 1</p><p>Input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">0 </span><span class="hljs-number">0</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p> output</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><p>Sample 2</p><p>Input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span><br><span class="hljs-symbol">0 </span><span class="hljs-number">1</span> <span class="hljs-number">0</span><br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">YES</span><br></code></pre></td></tr></table></figure><p>Sample 3</p><p>Input</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 0">1 1 1<br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">NO</span><br></code></pre></td></tr></table></figure><p>code</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">7</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">6</span>;i++)&#123;<br>        cin&gt;&gt;a[i];<br>    &#125;<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(a[i]==a[i+<span class="hljs-number">3</span>])&#123;<br>            sum++;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">if</span>(sum&gt;=<span class="hljs-number">1</span>)cout&lt;&lt;<span class="hljs-string">&quot;YES&quot;</span>;<br>    <span class="hljs-keyword">else</span> cout&lt;&lt;<span class="hljs-string">&quot;NO&quot;</span>;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1255B. Fridge Lockers</title>
    <link href="/2022/11/15/Codeforces%201255B.%20Fridge%20Lockers/"/>
    <url>/2022/11/15/Codeforces%201255B.%20Fridge%20Lockers/</url>
    
    <content type="html"><![CDATA[<p>Hanh lives in a shared apartment. There are <strong>n</strong>n people (including Hanh) living there, each has a private fridge.</p><p><strong>n</strong>n fridges are secured by several steel chains. Each steel chain connects two <strong>different</strong> fridges and is protected by a digital lock. The owner of a fridge knows passcodes of all chains connected to it. A fridge can be open only if all chains connected to it are unlocked. For example, if a fridge has no chains connected to it at all, then any of <strong>n</strong>n people can open it.</p><p><img src="https://espresso.codeforces.com/570ec6cd3902c8d6112ec73d4050bb5977b76573.png"></p><p>For exampe, in the picture there are <strong>n</strong>&#x3D;<strong>4</strong>n&#x3D;4 <strong>people and</strong> <strong>5</strong>5 <strong>chains. The first person knows passcodes of two chains:</strong> <strong>1</strong>−<strong>4</strong>1−4 <strong>and</strong> <strong>1</strong>−<strong>2</strong>1−2**. The fridge** <strong>1</strong>1 <strong>can be open by its owner (the person</strong> <strong>1</strong>1**), also two people** <strong>2</strong>2 <strong>and</strong> <strong>4</strong>4 <strong>(acting together) can open it.<strong>The weights of these fridges are <strong>a</strong>1</strong>,<strong>a</strong>2</strong>,<strong>…</strong>,<strong>a</strong>na1,a2,…,an. To make a steel chain connecting fridges <strong>u</strong>u and <strong>v</strong>v, you have to pay <strong>a</strong>u**+<strong>a</strong>v**au+av dollars. Note that the landlord allows you to create <strong>multiple chains connecting the same pair of fridges</strong>.</p><p>Hanh’s apartment landlord asks you to create exactly <strong>m</strong>m steel chains so that all fridges are private. A fridge is private if and only if, among <strong>n</strong>n people living in the apartment, only the owner can open it (i.e. no other person acting alone can do it). In other words, the fridge <strong>i</strong>i is not private if there exists the person <strong>j</strong>j (<strong>i</strong>≠<strong>j</strong>i≠j) that the person <strong>j</strong>j can open the fridge <strong>i</strong>i.</p><p>For example, in the picture all the fridges are private. On the other hand, if there are <strong>n</strong>&#x3D;<strong>2</strong>n&#x3D;2 fridges and only one chain (which connects them) then both fridges are not private (both fridges can be open not only by its owner but also by another person).</p><p>Of course, the landlord wants to minimize the total cost of all steel chains to fulfill his request. Determine whether there exists any way to make exactly <strong>m</strong>m chains, and if yes, output any solution that minimizes the total cost.</p><p>Input</p><p>Each test contains multiple test cases. The first line contains the number of test cases <strong>T</strong>T (<strong>1</strong>≤<strong>T</strong>≤<strong>10</strong>1≤T≤10). Then the descriptions of the test cases follow.</p><p>The first line of each test case contains two integers <strong>n</strong>n, <strong>m</strong>m (<strong>2</strong>≤<strong>n</strong>≤<strong>1000</strong>2≤n≤1000, <strong>1</strong>≤<strong>m</strong>≤<strong>n</strong>1≤m≤n) — the number of people living in Hanh’s apartment and the number of steel chains that the landlord requires, respectively.</p><p>The second line of each test case contains <strong>n</strong>n integers <strong>a</strong>1**,<strong>a</strong>2**,<strong>…</strong>,<strong>a</strong>na1,a2,…,an (<strong>0</strong>≤<strong>a</strong>i<strong>≤</strong>10<strong>4</strong>0≤ai≤104) — weights of all fridges.</p><p>Output</p><p>For each test case:</p><ul><li>If there is no solution, print a single integer <strong>−</strong>1−1.</li><li>Otherwise, print a single integer <strong>c</strong>c — the minimum total cost. The <strong>i</strong>i-th of the next <strong>m</strong>m lines contains two integers <strong>u</strong>iui and <strong>v</strong>ivi (<strong>1</strong>≤<strong>u</strong>i**,<strong>v</strong>i<strong>≤</strong>n<strong>1≤ui,vi≤n, <strong>u</strong>i</strong>≠<strong>v</strong>i**ui≠vi), meaning that the <strong>i</strong>i-th steel chain connects fridges <strong>u</strong>iui and <strong>v</strong>ivi. An arbitrary number of chains can be between a pair of fridges.</li></ul><p>If there are multiple answers, print any.</p><p>Example</p><p>input</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs basic"><span class="hljs-number">3</span><br><span class="hljs-symbol">4 </span><span class="hljs-number">4</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">1</span> <span class="hljs-number">1</span> <span class="hljs-number">1</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">1</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br><span class="hljs-symbol">3 </span><span class="hljs-number">3</span><br><span class="hljs-symbol">1 </span><span class="hljs-number">2</span> <span class="hljs-number">3</span><br></code></pre></td></tr></table></figure><p>output</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs diff">8<br>1 2<br>4 3<br>3 2<br>4 1<br><span class="hljs-deletion">-1</span><br>12<br>3 2<br>1 2<br>3 1<br></code></pre></td></tr></table></figure><p>code</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span></span>&#123;<br>    <span class="hljs-type">int</span> n,m;<br>    cin&gt;&gt;n&gt;&gt;m;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">1005</span>];<br>    <span class="hljs-type">int</span> sum=<span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br>        cin&gt;&gt;a[i];<br>        sum+=a[i];<br>    &#125;<br>    <span class="hljs-keyword">if</span>(m&lt;n||(m==<span class="hljs-number">2</span>&amp;&amp;n==<span class="hljs-number">2</span>))&#123;<br>        cout&lt;&lt;<span class="hljs-number">-1</span>&lt;&lt;endl;;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    cout&lt;&lt;sum*<span class="hljs-number">2</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;n;i++)&#123;<br>        cout&lt;&lt;i&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;i+<span class="hljs-number">1</span>&lt;&lt;endl;<br>    &#125;<br>    cout&lt;&lt;n&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;<span class="hljs-number">1</span>&lt;&lt;endl;<br>    <span class="hljs-keyword">return</span>;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    cin&gt;&gt;t;<br>    <span class="hljs-keyword">while</span>(t--)&#123;<br>        <span class="hljs-built_in">solve</span>();<br>    &#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1744C. Traffic Light</title>
    <link href="/2022/11/11/Codeforces%201744C.%20Traffic%20Light/"/>
    <url>/2022/11/11/Codeforces%201744C.%20Traffic%20Light/</url>
    
    <content type="html"><![CDATA[<p>C. Traffic Light<br>time limit per test1 second<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>You find yourself on an unusual crossroad with a weird traffic light. That traffic light has three possible colors: red (r), yellow (y), green (g). It is known that the traffic light repeats its colors every n seconds and at the i-th second the color si is on.</p><p>That way, the order of the colors is described by a string. For example, if s&#x3D;”rggry”, then the traffic light works as the following: red-green-green-red-yellow-red-green-green-red-yellow- … and so on.</p><p>More formally, you are given a string s1,s2,…,sn of length n. At the first second the color s1 is on, at the second — s2, …, at the n-th second the color sn is on, at the n+1-st second the color s1 is on and so on.</p><p>You need to cross the road and that can only be done when the green color is on.</p><p>You know which color is on the traffic light at the moment, but you don’t know the current moment of time. You need to find the minimum amount of time in which you are guaranteed to cross the road.</p><p>You can assume that you cross the road immediately.</p><p>For example, with s&#x3D;”rggry” and the current color r there are two options: either the green color will be on after 1 second, or after 3. That way, the answer is equal to 3 — that is the number of seconds that we are guaranteed to cross the road, if the current color is r.</p><p>Input<br>The first line contains a single integer t (1≤t≤104) — the number of test cases.</p><p>Then the description of the test cases follows.</p><p>The first line of each test case contains an integer n and a symbol c (1≤n≤2⋅105, c is one of allowed traffic light colors r, y or g)— the length of the string s and the current color of the traffic light.</p><p>The second line of each test case contains a string s of the length n, consisting of the letters r, y and g.</p><p>It is guaranteed that the symbol g is in the string s and the symbol c is in the string s.</p><p>It is guaranteed, that the sum of n over all test cases does not exceed 2⋅105.</p><p>Output<br>For each test case output the minimal number of second in which you are guaranteed to cross the road.</p><p>Example<br>inputCopy<br>6<br>5 r<br>rggry<br>1 g<br>g<br>3 r<br>rrg<br>5 y<br>yrrgy<br>7 r<br>rgrgyrg<br>9 y<br>rrrgyyygy<br>outputCopy<br>3<br>0<br>2<br>4<br>1<br>4<br>Note<br>The first test case is explained in the statement.</p><p>In the second test case the green color is on so you can cross the road immediately.</p><p>In the third test case, if the red color was on at the second second, then we would wait for the green color for one second, and if the red light was on at the first second, then we would wait for the green light for two seconds.</p><p>In the fourth test case the longest we would wait for the green color is if we wait for it starting from the fifth second.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t;<br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t--) &#123;<br><span class="hljs-type">int</span> n;<br><span class="hljs-type">char</span> c;<br>string s;<br>cin &gt;&gt; n &gt;&gt; c &gt;&gt; s;<br>s += s;<br><span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>, maxv = <span class="hljs-number">0</span>, flag = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; s.<span class="hljs-built_in">length</span>(); i++) &#123;<br><span class="hljs-keyword">if</span> (s[i] == c) flag = <span class="hljs-number">1</span>;<br><span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">&#x27;g&#x27;</span>)flag = <span class="hljs-number">0</span>, maxv = <span class="hljs-built_in">max</span>(maxv, cnt), cnt = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (flag==<span class="hljs-number">1</span>)cnt++;<br>&#125;<br>cout &lt;&lt; maxv &lt;&lt; endl;<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1744D. Divisibility by 2^n</title>
    <link href="/2022/11/11/Codeforces%201744D%20D.Divisibility%20by%202%5En/"/>
    <url>/2022/11/11/Codeforces%201744D%20D.Divisibility%20by%202%5En/</url>
    
    <content type="html"><![CDATA[<p>D. Divisibility by 2^n<br>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>You are given an array of positive integers a1,a2,…,an.</p><p>Make the product of all the numbers in the array (that is, a1⋅a2⋅…⋅an) divisible by 2n.</p><p>You can perform the following operation as many times as you like:</p><p>select an arbitrary index i (1≤i≤n) and replace the value ai with ai&#x3D;ai⋅i.<br>You cannot apply the operation repeatedly to a single index. In other words, all selected values of i must be different.</p><p>Find the smallest number of operations you need to perform to make the product of all the elements in the array divisible by 2n. Note that such a set of operations does not always exist.</p><p>Input<br>The first line of the input contains a single integer t (1≤t≤104) — the number test cases.</p><p>Then the descriptions of the input data sets follow.</p><p>The first line of each test case contains a single integer n (1≤n≤2⋅105) — the length of array a.</p><p>The second line of each test case contains exactly n integers: a1,a2,…,an (1≤ai≤109).</p><p>It is guaranteed that the sum of n values over all test cases in a test does not exceed 2⋅105.</p><p>Output<br>For each test case, print the least number of operations to make the product of all numbers in the array divisible by 2n. If the answer does not exist, print -1.</p><p>Example<br>inputCopy<br>6<br>1<br>2<br>2<br>3 2<br>3<br>10 6 11<br>4<br>13 17 1 1<br>5<br>1 1 12 1 1<br>6<br>20 7 14 18 3 5<br>outputCopy<br>0<br>1<br>1<br>-1<br>2<br>1<br>Note<br>In the first test case, the product of all elements is initially 2, so no operations needed.</p><p>In the second test case, the product of elements initially equals 6. We can apply the operation for i&#x3D;2, and then a2 becomes 2⋅2&#x3D;4, and the product of numbers becomes 3⋅4&#x3D;12, and this product of numbers is divided by 2n&#x3D;22&#x3D;4.</p><p>In the fourth test case, even if we apply all possible operations, we still cannot make the product of numbers divisible by 2n  — it will be (13⋅1)⋅(17⋅2)⋅(1⋅3)⋅(1⋅4)&#x3D;5304, which does not divide by 2n&#x3D;24&#x3D;16.</p><p>In the fifth test case, we can apply operations for i&#x3D;2 and i&#x3D;4.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">2e5</span>;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t;<br>cin &gt;&gt; t;<br><span class="hljs-type">int</span> n, x;<br><span class="hljs-keyword">while</span> (t--) &#123;<br>cin &gt;&gt; n;<br>vector&lt;<span class="hljs-type">int</span>&gt;<span class="hljs-built_in">v</span>(n);<br><span class="hljs-type">int</span> cnt = <span class="hljs-number">0</span>, cnt1;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<br>cin &gt;&gt; x;<br>cnt1 = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">while</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>cnt++;<br>x /= <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-type">int</span> j = i;<br><span class="hljs-keyword">while</span> (j % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>) &#123;<br>cnt1++;<br>j /= <span class="hljs-number">2</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (cnt1 != <span class="hljs-number">0</span>)v.<span class="hljs-built_in">push_back</span>(cnt1);<br>&#125;<br><span class="hljs-built_in">sort</span>(v.<span class="hljs-built_in">begin</span>(), v.<span class="hljs-built_in">end</span>());<br><span class="hljs-type">int</span> ans = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = v.<span class="hljs-built_in">size</span>() - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span> &amp;&amp; cnt &lt; n; i--) &#123;<br>cnt += v[i];<br>ans++;<br>&#125;<br><span class="hljs-keyword">if</span> (cnt &lt; n)cout &lt;&lt; <span class="hljs-number">-1</span> &lt;&lt; endl;<br><span class="hljs-keyword">else</span> cout &lt;&lt; ans &lt;&lt; endl;<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1744B. Even-Odd Increments</title>
    <link href="/2022/11/11/Codeforces%201744B.%20Even-Odd%20Increments/"/>
    <url>/2022/11/11/Codeforces%201744B.%20Even-Odd%20Increments/</url>
    
    <content type="html"><![CDATA[<p>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>You are given n of integers a1,a2,…,an. Process q queries of two types:</p><p>query of the form “0 xj”: add the value xj to all even elements of the array a,<br>query of the form “1 xj”: add the value xj to all odd elements of the array a.<br>Note that when processing the query, we look specifically at the odd&#x2F;even value of ai, not its index.</p><p>After processing each query, print the sum of the elements of the array a.</p><p>Please note that the answer for some test cases won’t fit into 32-bit integer type, so you should use at least 64-bit integer type in your programming language (like long long for C++).</p><p>Input<br>The first line of the input contains an integer t (1≤t≤104) — the number of test cases.</p><p>The descriptions of the test cases follow.</p><p>The first line of each test case contains two integers n and q (1≤n, q≤105) — the length of array a and the number of queries.</p><p>The second line of each test case contains exactly n integers: a1,a2,…,an (1≤ai≤109) — elements of the array a.</p><p>The following q lines contain queries as two integers typej and xj (0≤typej≤1, 1≤xj≤104).</p><p>It is guaranteed that the sum of values n over all test cases in a test does not exceed 105. Similarly, the sum of values q over all test cases does not exceed 105.</p><p>Output<br>For each test case, print q numbers: the sum of the elements of the array a after processing a query.</p><p>Example<br>inputCopy<br>4<br>1 1<br>1<br>1 1<br>3 3<br>1 2 4<br>0 2<br>1 3<br>0 5<br>6 7<br>1 3 2 4 10 48<br>1 6<br>0 5<br>0 4<br>0 5<br>1 3<br>0 12<br>0 1<br>6 7<br>1000000000 1000000000 1000000000 11 15 17<br>0 17<br>1 10000<br>1 51<br>0 92<br>0 53<br>1 16<br>0 1<br>outputCopy<br>2<br>11<br>14<br>29<br>80<br>100<br>100<br>100<br>118<br>190<br>196<br>3000000094<br>3000060094<br>3000060400<br>3000060952<br>3000061270<br>3000061366<br>3000061366<br>Note<br>In the first test case, the array a&#x3D;[2] after the first query.</p><p>In the third test case, the array a is modified as follows: [1,3,2,4,10,48] → [7,9,2,4,10,48] → [7,9,7,9,15,53] → [7,9,7,9,15,53] → [10,12,10,12,18,56] → [22,24,22,24,30,68] → [23,25,23,25,31,69].</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t;<br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t--) &#123;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> n, q,sum=<span class="hljs-number">0</span>;<br>cin &gt;&gt; n &gt;&gt; q;<br><span class="hljs-type">int</span> odd = <span class="hljs-number">0</span>, even = <span class="hljs-number">0</span>, x;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>cin &gt;&gt; x;<br><span class="hljs-keyword">if</span> (x % <span class="hljs-number">2</span> == <span class="hljs-number">0</span>)odd++;<br><span class="hljs-keyword">else</span> even++;<br>sum += x;<br>&#125;<br><span class="hljs-type">long</span> <span class="hljs-type">long</span> ty, p;<br><span class="hljs-keyword">while</span> (q--) &#123;<br>cin &gt;&gt; ty &gt;&gt; p;<br><span class="hljs-keyword">if</span> (ty == <span class="hljs-number">0</span>) &#123; <br>sum += p * odd;<br><span class="hljs-keyword">if</span> (p % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>) even += odd, odd = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">else</span> &#123; <br>sum += p * even;<br><span class="hljs-keyword">if</span> (p % <span class="hljs-number">2</span> == <span class="hljs-number">1</span>)odd += even, even = <span class="hljs-number">0</span>;<br>&#125;<br>cout &lt;&lt; sum &lt;&lt; endl;<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br> <br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1744A. Number Replacement</title>
    <link href="/2022/11/11/CodeForces1744A.%20Number%20Replacement/"/>
    <url>/2022/11/11/CodeForces1744A.%20Number%20Replacement/</url>
    
    <content type="html"><![CDATA[<p>A. Number Replacement<br>time limit per test2 seconds<br>memory limit per test256 megabytes<br>inputstandard input<br>outputstandard output<br>An integer array a1,a2,…,an is being transformed into an array of lowercase English letters using the following prodecure:</p><p>While there is at least one number in the array:</p><p>Choose any number x from the array a, and any letter of the English alphabet y.<br>Replace all occurrences of number x with the letter y.<br>For example, if we initially had an array a&#x3D;[2,3,2,4,1], then we could transform it the following way:</p><p>Choose the number 2 and the letter c. After that a&#x3D;[c,3,c,4,1].<br>Choose the number 3 and the letter a. After that a&#x3D;[c,a,c,4,1].<br>Choose the number 4 and the letter t. After that a&#x3D;[c,a,c,t,1].<br>Choose the number 1 and the letter a. After that a&#x3D;[c,a,c,t,a].<br>After the transformation all letters are united into a string, in our example we get the string “cacta”.</p><p>Having the array a and the string s determine if the string s could be got from the array a after the described transformation?</p><p>Input<br>The first line contains a single integer t (1≤t≤103) — the number of test cases.</p><p>Then the description of the test cases follows.</p><p>The first line of each test case contains a single integer n (1≤n≤50) — the length of the array a and the string s.</p><p>The second line of each test case contains exactly n integers: a1,a2,…,an (1≤ai≤50) — the elements of the array a.</p><p>The third line of each test case contains a string s of length n, consisting of lowercase English letters.</p><p>Output<br>For each test case, output “YES”, if we can get the string s from the array a, and “NO” otherwise. You can output each letter in any case.</p><p>Example<br>inputCopy<br>7<br>5<br>2 3 2 4 1<br>cacta<br>1<br>50<br>a<br>2<br>11 22<br>ab<br>4<br>1 2 2 1<br>aaab<br>5<br>1 2 3 2 1<br>aaaaa<br>6<br>1 10 2 9 3 8<br>azzfdb<br>7<br>1 2 3 4 1 1 2<br>abababb<br>outputCopy<br>YES<br>YES<br>YES<br>NO<br>YES<br>YES<br>NO<br>Note<br>The first test case corresponds to the sample described in the statement.</p><p>In the second test case we can choose the number 50 and the letter a.</p><p>In the third test case we can choose the number 11 and the letter a, after that a&#x3D;[a,22]. Then we choose the number 22 and the letter b and get a&#x3D;[a,b].</p><p>In the fifth test case we can change all numbers one by one to the letter a.</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t,n;<br>string s;<br><span class="hljs-type">int</span> a[<span class="hljs-number">55</span>];<br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t--) &#123;<br><span class="hljs-type">int</span> b[<span class="hljs-number">55</span>] = &#123; <span class="hljs-number">0</span> &#125;;<br><span class="hljs-type">int</span> flag = <span class="hljs-number">1</span>;<br>cin &gt;&gt; n;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>cin &gt;&gt; a[i];<br>&#125;<br>cin &gt;&gt; s;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br><span class="hljs-keyword">if</span> (b[a[i]] != <span class="hljs-number">0</span> &amp;&amp; b[a[i]] != s[i]) &#123;<br>flag = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">break</span>;<br>&#125;<br>b[a[i]] = s[i];<br>&#125;<br><span class="hljs-keyword">if</span> (flag) &#123; cout &lt;&lt; <span class="hljs-string">&quot;YES&quot;</span> &lt;&lt; endl; &#125;<br><span class="hljs-keyword">else</span> &#123;cout &lt;&lt; <span class="hljs-string">&quot;NO&quot;</span> &lt;&lt; endl; &#125;<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1750B. Maximum Substring</title>
    <link href="/2022/11/11/Codeforces%201750B.%20Maximum%20Substring/"/>
    <url>/2022/11/11/Codeforces%201750B.%20Maximum%20Substring/</url>
    
    <content type="html"><![CDATA[<p>B. Maximum Substring</p><p>A binary string is a string consisting only of the characters 0 and 1. You are given a binary string s.</p><p>For some non-empty substring† t of string s containing x characters 0 and y characters 1, define its cost as:</p><p>x⋅y, if x&gt;0 and y&gt;0;<br>x2, if x&gt;0 and y&#x3D;0;<br>y2, if x&#x3D;0 and y&gt;0.<br>Given a binary string s of length n, find the maximum cost across all its non-empty substrings.</p><p>† A string a is a substring of a string b if a can be obtained from b by deletion of several (possibly, zero or all) characters from the beginning and several (possibly, zero or all) characters from the end.</p><p>Input<br>Each test consists of multiple test cases. The first line contains a single integer t (1≤t≤105) — the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer n (1≤n≤2⋅105) — the length of the string s.</p><p>The second line of each test case contains a binary string s of length n.</p><p>It is guaranteed that the sum of n over all test cases does not exceed 2⋅105.</p><p>Output<br>For each test case, print a single integer — the maximum cost across all substrings.</p><p>Example<br>inputCopy<br>6<br>5<br>11100<br>7<br>1100110<br>6<br>011110<br>7<br>1001010<br>4<br>1000<br>1<br>0<br>outputCopy<br>9<br>12<br>16<br>12<br>9<br>1<br>Note<br>In the first test case, we can take a substring 111. It contains 3 characters 1 and 0 characters 0. So a&#x3D;3, b&#x3D;0 and its cost is 32&#x3D;9.</p><p>In the second test case, we can take the whole string. It contains 4 characters 1 and 3 characters 0. So a&#x3D;4, b&#x3D;3 and its cost is 4⋅3&#x3D;12.</p><p>In the third test case, we can can take a substring 1111 and its cost is 42&#x3D;16.</p><p>In the fourth test case, we can take the whole string and cost is 4⋅3&#x3D;12.</p><p>In the fifth test case, we can take a substring 000 and its cost is 3⋅3&#x3D;9.</p><p>In the sixth test case, we can only take the substring 0 and its cost is 1⋅1&#x3D;1.</p><p>水</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">12</span>;<br><span class="hljs-keyword">typedef</span> <span class="hljs-type">long</span> <span class="hljs-type">long</span> ll;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br>ll n;<br>string s;<br>cin &gt;&gt; n &gt;&gt; s;<br>ll len1 = <span class="hljs-number">0</span>, len0 = <span class="hljs-number">0</span>;<br>ll maxv0=<span class="hljs-number">0</span>, maxv1 = <span class="hljs-number">0</span>;<br><span class="hljs-keyword">if</span> (s[n - <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;0&#x27;</span>)s[n] = <span class="hljs-string">&#x27;1&#x27;</span>;<br><span class="hljs-keyword">else</span> s[n] = <span class="hljs-string">&#x27;0&#x27;</span>;<br> <br>ll len00=<span class="hljs-number">0</span>, len11=<span class="hljs-number">0</span>;<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br><span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">&#x27;0&#x27;</span>) &#123;<br>len0++;<br>len00++;<br>&#125;<br><span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">&#x27;0&#x27;</span> &amp;&amp; s[i + <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;1&#x27;</span>) &#123;<br>maxv0 = <span class="hljs-built_in">max</span>(maxv0, len0);<br>len0 = <span class="hljs-number">0</span>;<br>&#125;<br><span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">&#x27;1&#x27;</span>) &#123;<br>len1++;<br>len11++;<br>&#125;<br><span class="hljs-keyword">if</span> (s[i] == <span class="hljs-string">&#x27;1&#x27;</span> &amp;&amp; s[i + <span class="hljs-number">1</span>] == <span class="hljs-string">&#x27;0&#x27;</span>) &#123;<br>maxv1 = <span class="hljs-built_in">max</span>(maxv1, len1);<br>len1 = <span class="hljs-number">0</span>;<br>&#125;<br>&#125;<br>ll p = <span class="hljs-built_in">max</span>(<span class="hljs-built_in">pow</span>(maxv0, <span class="hljs-number">2</span>), <span class="hljs-built_in">pow</span>(maxv1, <span class="hljs-number">2</span>));<br>ll maxv = <span class="hljs-built_in">max</span>(p, len00 * len11);<br>cout &lt;&lt; maxv &lt;&lt; endl;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t; <br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t--) &#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Codeforces 1750A. Indirect Sort</title>
    <link href="/2022/11/11/Codeforces%201750A.%20Indirect%20Sort/"/>
    <url>/2022/11/11/Codeforces%201750A.%20Indirect%20Sort/</url>
    
    <content type="html"><![CDATA[<p>A. Indirect Sort</p><p>You are given a permutation a1,a2,…,an of size n, where each integer from 1 to n appears exactly once.</p><p>You can do the following operation any number of times (possibly, zero):</p><p>Choose any three indices i,j,k (1≤i&lt;j&lt;k≤n).<br>If ai&gt;ak, replace ai with ai+aj. Otherwise, swap aj and ak.<br>Determine whether you can make the array a sorted in non-descending order.</p><p>Input<br>Each test consists of multiple test cases. The first line contains a single integer t (1≤t≤5000) — the number of test cases. The description of test cases follows.</p><p>The first line of each test case contains a single integer n (3≤n≤10) — the length of the array a.</p><p>The second line contains n integers a1,a2,…,an (1≤ai≤n, ai≠aj if i≠j) — the elements of the array a.</p><p>Output<br>For each test case, output “Yes” (without quotes) if the array can be sorted in non-descending order, and “No” (without quotes) otherwise.</p><p>You can output “Yes” and “No” in any case (for example, strings “YES”, “yEs” and “yes” will be recognized as a positive response).</p><p>Example<br>inputCopy<br>7<br>3<br>1 2 3<br>3<br>1 3 2<br>7<br>5 3 4 7 6 2 1<br>7<br>7 6 5 4 3 2 1<br>5<br>2 1 4 5 3<br>5<br>2 1 3 4 5<br>7<br>1 2 6 7 4 3 5<br>outputCopy<br>Yes<br>Yes<br>No<br>No<br>No<br>No<br>Yes<br>Note<br>In the first test case, [1,2,3] is already sorted in non-descending order.</p><p>In the second test case, we can choose i&#x3D;1,j&#x3D;2,k&#x3D;3. Since a1≤a3, swap a2 and a3, the array then becomes [1,2,3], which is sorted in non-descending order.</p><p>In the seventh test case, we can do the following operations successively:</p><p>Choose i&#x3D;5,j&#x3D;6,k&#x3D;7. Since a5≤a7, swap a6 and a7, the array then becomes [1,2,6,7,4,5,3].<br>Choose i&#x3D;5,j&#x3D;6,k&#x3D;7. Since a5&gt;a7, replace a5 with a5+a6&#x3D;9, the array then becomes [1,2,6,7,9,5,3].<br>Choose i&#x3D;2,j&#x3D;5,k&#x3D;7. Since a2≤a7, swap a5 and a7, the array then becomes [1,2,6,7,3,5,9].<br>Choose i&#x3D;2,j&#x3D;4,k&#x3D;6. Since a2≤a6, swap a4 and a6, the array then becomes [1,2,6,5,3,7,9].<br>Choose i&#x3D;1,j&#x3D;3,k&#x3D;5. Since a1≤a5, swap a3 and a5, the array then becomes [1,2,3,5,6,7,9], which is sorted in non-descending order.<br>In the third, the fourth, the fifth and the sixth test cases, it can be shown that the array cannot be sorted in non-descending order.<br>由题意易知，当数组第一个数为1即可满足，无需理会后续操作</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-type">const</span> <span class="hljs-type">int</span> N = <span class="hljs-number">12</span>;<br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">solve</span><span class="hljs-params">()</span> </span>&#123;<br><span class="hljs-type">int</span> n;<br>cin &gt;&gt; n;<br><span class="hljs-type">int</span> a[N];<br><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; n; i++) &#123;<br>cin &gt;&gt; a[i];<br>&#125;<br><span class="hljs-keyword">if</span> (a[<span class="hljs-number">0</span>]==<span class="hljs-number">1</span>) &#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;YES&quot;</span> &lt;&lt; endl;<br>&#125;<br><span class="hljs-keyword">else</span> &#123;<br>cout &lt;&lt; <span class="hljs-string">&quot;NO&quot;</span> &lt;&lt; endl;<br>&#125;<br>&#125;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br><span class="hljs-type">int</span> t; <br>cin &gt;&gt; t;<br><span class="hljs-keyword">while</span> (t--) &#123;<br><span class="hljs-built_in">solve</span>();<br>&#125;<br>&#125;<br><span class="hljs-comment">//code by yxisme;</span><br><span class="hljs-comment">//code by zeitspeed;</span><br><span class="hljs-comment">//welcome to yxisme.com;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>实验室第二次讲课</title>
    <link href="/2022/11/10/%E7%95%99%E8%A8%80%E6%9D%BF/"/>
    <url>/2022/11/10/%E7%95%99%E8%A8%80%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="实验室第二次讲课"><a href="#实验室第二次讲课" class="headerlink" title="实验室第二次讲课"></a>实验室第二次讲课</h1><h1 id="47-时间转换"><a href="#47-时间转换" class="headerlink" title="#47. 时间转换"></a>#47. 时间转换</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>给定一个以秒为单位的时间t，要求用的格式来表示这个时间。<code>&lt;H&gt;</code>表示时间，<code>&lt;M&gt;</code>表示分钟，而表示秒，它们都是整数且没有前导的“0”。例如，若t&#x3D;0，则应输出是“”；若t&#x3D;3661，则输出“”。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入只有一行，是一个整数t（0&lt;&#x3D;t&lt;&#x3D;86399）。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出只有一行，是以“”的格式所表示的时间，不包括引号。</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1"><a href="#输入数据-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">0<br></code></pre></td></tr></table></figure><h2 id="输出数据-1"><a href="#输出数据-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">0:0:0<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-type">int</span> hh,mm,tt;<br>    tt=t%<span class="hljs-number">60</span>;<br>    mm=((t-tt)%<span class="hljs-number">3600</span>)/<span class="hljs-number">60</span>;<span class="hljs-comment">//求余后单位为秒，需要转化为分</span><br>    hh=t/<span class="hljs-number">3600</span>;<span class="hljs-comment">//利用向下取整的特性直接求时</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d:%d:%d&quot;</span>,hh,mm,tt);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="18-ABC比大小"><a href="#18-ABC比大小" class="headerlink" title="#18. ABC比大小"></a>#18. ABC比大小</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><p>这道题很简单，输入三个数字，只需按照他们的大小排好序就行。</p><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><ul><li>第一行随机输入三个整数ABC（0&lt;&#x3D;A,B,C&lt;&#x3D;10000）</li></ul><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><ul><li>将A,B,C按照从小到大的顺序输出即可每个数字直接用空格隔开。</li></ul><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-1"><a href="#输入数据-1-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">2 3 1<br></code></pre></td></tr></table></figure><h2 id="输出数据-1-1"><a href="#输出数据-1-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">1 2 3<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//分支选择写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> A, B, C;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;A,&amp;B,&amp;C);<br><span class="hljs-keyword">if</span> (A &lt; B) &#123;<br><span class="hljs-keyword">if</span> (B &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, A, B, C);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (A &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, A, C, B);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, C, A, B);<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (C &lt; B) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, C, B, A);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (A &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, B, A, C);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, B, C, A);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//排序写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<span class="hljs-comment">//冒泡排序</span><br>      <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>-i<span class="hljs-number">-1</span>;j++)&#123;<br>        <span class="hljs-keyword">if</span>(a[j]&gt;a[j+<span class="hljs-number">1</span>])&#123;<br>           <span class="hljs-type">int</span> temp=a[j];<br>           a[j]=a[j+<span class="hljs-number">1</span>];<br>           a[j+<span class="hljs-number">1</span>]=temp;<br>    &#125;<br>  &#125;<br>&#125;<span class="hljs-comment">//(进阶：推荐学习sort排序)</span><br>  <br> <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">2</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,a[i]);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br></code></pre></td></tr></table></figure><h1 id="24-求平均分"><a href="#24-求平均分" class="headerlink" title="#24. 求平均分"></a>#24. 求平均分</h1><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><p>求平均分和最高分最低分，一直是老师的一份简单而又头疼的工作，数量多，容易算错，现在我们编写一个程序来帮助老师求平均分、最高分和最低分吧。</p><h2 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入N个学生(1&lt;&#x3D;N &lt;&#x3D;10000),以下N行输入N个学生的成绩，成绩含有整数和小数。</p><h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>第一行输出最低分和最高分，最低分最高分之间用一个空格隔开，若成绩为小数则向上取整，例如89.4输出90，</p><p>第二行输出平均分。</p><p>注意，平均成绩保留两位小数哦。</p><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-2"><a href="#输入数据-1-2" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs input1">5<br>90<br>85<br>73<br>88<br>71<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-2"><a href="#输出数据-1-2" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs output1">71 90<br>81.40<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>测试点1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs none">5<br>90<br>85<br>73<br>88<br>71<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><p>测试点2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs none">1<br>99<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><p>测试点3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs none">100<br>7 49 73 58 30 72 44 78 23 9 40 65 92 42 87 3 27 29 40.5 12 3<br>69 9 57 60 33 99 78 16 35 97 26 12 67 10 33 79 49 79 21 67 72 <br>93 36 85 45 28 91 94 57 1 53.5 8 44 68.5 90.5 24 96 30 3 22 <br>66.5 49 24 1 53 77 8 28 33 98 81 35.5 13 65 14 63 36 25 69 15 <br>94 29 1 17 95 5 4 51 98 88.5 23 5 82 52 66 16 37 38 44 <br>测试点3答案为<br>1 99<br>46.21<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> n,i;<br><span class="hljs-type">float</span> score,max,min,sum,average;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-keyword">for</span> (i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%f&quot;</span>,&amp;score);<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>)&#123;<span class="hljs-comment">//当i=1时，为变量赋初值</span><br>max=score;<br>min=score;<br>sum=score;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>sum+=score;<br><span class="hljs-keyword">if</span> (score&gt;max)&#123;<br>max=score;<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score&lt;min)&#123;<br>min=score;<br>&#125;<br>&#125;<br>&#125;<br>average=sum/n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.0f %.0f\n%.2f&quot;</span>,<span class="hljs-built_in">ceil</span>(min),<span class="hljs-built_in">ceil</span>(max),average);<br>    <span class="hljs-comment">//ceil():向上取整函数,相对的floor():向下取整函数</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br></code></pre></td></tr></table></figure><h1 id="26-能被7和11整除的数字"><a href="#26-能被7和11整除的数字" class="headerlink" title="#26. 能被7和11整除的数字"></a>#26. 能被7和11整除的数字</h1><h2 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h2><p>有一种神奇的数字，我们暂且叫它“7数”吧，它能被7或者11整除或者同时被它俩整除，让我们找出这些数字。</p><h2 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一个数字N(1&lt;&#x3D;N&lt;&#x3D;10000)，找出不比它大的所有“7数”。若没有这个数，则输出-1。</p><h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出所有“7数”，每个“7数”之间用空格隔开，末尾不能有多余的空格。</p><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-3"><a href="#输入数据-1-3" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">60<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-3"><a href="#输出数据-1-3" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">7 11 14 21 22 28 33 35 42 44 49 55 56<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<br>    <span class="hljs-keyword">if</span> (a&lt;<span class="hljs-number">7</span>)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,<span class="hljs-number">-1</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= a; ++i)&#123;<br>            <span class="hljs-keyword">if</span> (i%<span class="hljs-number">7</span> == <span class="hljs-number">0</span> || i%<span class="hljs-number">11</span> == <span class="hljs-number">0</span>)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,i);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> ;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="29-数字的判断"><a href="#29-数字的判断" class="headerlink" title="#29. 数字的判断"></a>#29. 数字的判断</h1><h2 id="说明-4"><a href="#说明-4" class="headerlink" title="说明"></a>说明</h2><p>给出一个不多于5位数的整数，要求</p><ul><li>求出它是几位数</li><li>分别输出每一位数字</li><li>按逆序输出各位数字，例如原数为321,应输出123</li></ul><h2 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h2><p>一个不大于5位的数字N(1&lt;&#x3D;N&lt;&#x3D;99999)</p><h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p><strong>输出一共分三行</strong></p><ul><li>第一行 位数</li><li>第二行 用空格分开的每个数字，注意最后一个数字后没有空格</li><li>第三行 按逆序输出这个数</li></ul><h2 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-4"><a href="#输入数据-1-4" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">12345<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-4"><a href="#输出数据-1-4" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs output1">5<br>1 2 3 4 5<br>54321<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//字符串解法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">char</span> a[<span class="hljs-number">10</span>]=<span class="hljs-string">&quot;\0&quot;</span>;<br>    gets(a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, <span class="hljs-built_in">strlen</span>(a));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(a)<span class="hljs-number">-1</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c &quot;</span>, a[i]);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\n&quot;</span>,a[<span class="hljs-built_in">strlen</span>(a)<span class="hljs-number">-1</span>]);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-built_in">strlen</span>(a) - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="根据以上算法思想，大家思考一下以下题目"><a href="#根据以上算法思想，大家思考一下以下题目" class="headerlink" title="根据以上算法思想，大家思考一下以下题目"></a>根据以上算法思想，大家思考一下以下题目</h2><h4 id="4-digit-函数"><a href="#4-digit-函数" class="headerlink" title="4. digit 函数"></a>4. digit 函数</h4><h1 id="28-超级三角形"><a href="#28-超级三角形" class="headerlink" title="#28. 超级三角形"></a>#28. 超级三角形</h1><h2 id="说明-5"><a href="#说明-5" class="headerlink" title="说明"></a>说明</h2><p>超级三角形，让我按照自己喜欢的样式来打印漂亮的三角形吧，这个三角形是等腰三角形，而且团可以定制哦。</p><h2 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一个 n(1&lt;&#x3D;n&lt;&#x3D;15) 和一个 图案c 。</p><h2 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h2><p>第一行1个图案c</p><p>第二行3个图案c</p><p>按照规则输出三角形！</p><h2 id="样例-5"><a href="#样例-5" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-5"><a href="#输入数据-1-5" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">5 a<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-5"><a href="#输出数据-1-5" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs output1">    a<br>   aaa<br>  aaaaa<br> aaaaaaa<br>aaaaaaaaa<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i, n, j = <span class="hljs-number">1</span>, a = <span class="hljs-number">1</span>, c;<br>    <span class="hljs-type">char</span> t;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c&quot;</span>, &amp;n,&amp;t);<br>    c = n;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<span class="hljs-comment">//行控制</span><br>        <span class="hljs-keyword">while</span> (a &lt;= c - <span class="hljs-number">1</span>) &#123;<span class="hljs-comment">//注意观察空格规律，不要多打</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>            a++;<br>        &#125;<br>        c--;<br>        j = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (j &lt;= (<span class="hljs-number">2</span> * i) - <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,t);<br>            j++;<br>        &#125;<br>        a = <span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="34-能生的小兔子"><a href="#34-能生的小兔子" class="headerlink" title="#34. 能生的小兔子"></a>#34. 能生的小兔子</h1><h2 id="说明-6"><a href="#说明-6" class="headerlink" title="说明"></a>说明</h2><p>十九世纪七十年代，有人从外地带来了一对兔子到澳大利亚。兔子瞬间患难成灾。这些小兔子每3个月就会生一对小兔子，往后的每个月都会生一对小兔子。在理想的情况下（兔子不死）。我们来算算在第N个月后澳大利亚会有多少对兔子。</p><h2 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入月份N(1&lt;&#x3D;N&lt;&#x3D;50)</p><h2 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出每个月兔子的对数，中间用空格隔开。不用考虑末尾的空格。</p><h2 id="样例-6"><a href="#样例-6" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-6"><a href="#输入数据-1-6" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">8<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-6"><a href="#输出数据-1-6" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">1 1 2 3 5 8 13 21<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//知识点：斐波那契数列</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">50</span>]=&#123;<span class="hljs-number">1</span>&#125;;<span class="hljs-comment">//需要使用long long,在47后会超过int范围；</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    a[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>,a[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;n;i++)&#123;<br>     a[i]=a[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-2</span>];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld &quot;</span> , a[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="46-找众数"><a href="#46-找众数" class="headerlink" title="#46. 找众数"></a>#46. 找众数</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于菜菜子比较菜，所以出了一道很菜很菜的题目。</p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>菜菜子拥有一个由正整数组成的序列，需要你从中找出众数（众数是在一组数据中,出现次数最多的数据）</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行给定一个正整数n<em>n</em>, 满足 3\leq n\leq 10003≤<em>n</em>≤1000 . 第二行输入由n<em>n</em>个正整数组成的序列。序列里的数x<em>x</em>满足0\leq x\leq 1000000≤<em>x</em>≤100000</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出序列中的众数x_{mode}<em>x<strong>m</strong>o<strong>d</strong>e</em>和该数出现的次数count\left(x_{mode}\right)<em>co<strong>u</strong>n**t</em>(<em>x<strong>m</strong>o<strong>d</strong>e</em>)，如果由多个相同数量的众数则输出最大的众数（显然必定唯一）。</p><h2 id="输入数据-1-7"><a href="#输入数据-1-7" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs input1">7<br>1 4 3 3 2 2 3<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-7"><a href="#输出数据-1-7" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">3 3<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//c语言桶排序写法</span><br><span class="hljs-comment">//！！注意：桶排序只能用于数值范围小且集中的情况；</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> a[<span class="hljs-number">100005</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> pos=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> n;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-keyword">while</span>(n--)&#123;<br><span class="hljs-type">int</span> aa;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;aa);<br>a[aa]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">100000</span>;++i)&#123;<br><span class="hljs-keyword">if</span>(a[pos]&lt;=a[i])pos=i;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,pos,a[pos]);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//c++写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;a;<span class="hljs-comment">//</span><br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;m;<br>        a[m]++;<br>    &#125;<br>    <span class="hljs-type">int</span> maxv=<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>    map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;::iterator iter;<br>    iter=a.<span class="hljs-built_in">begin</span>();<br>    <span class="hljs-keyword">while</span>(iter!=a.<span class="hljs-built_in">end</span>())&#123;<br>        maxv=<span class="hljs-built_in">max</span>(iter-&gt;second,maxv);<br>        <span class="hljs-keyword">if</span>(maxv==iter-&gt;second)p=iter-&gt;first;<br>        iter++;<br>    &#125;<br>    cout&lt;&lt;p&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;maxv;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="根据以上算法思想，大家思考一下以下题目-1"><a href="#根据以上算法思想，大家思考一下以下题目-1" class="headerlink" title="根据以上算法思想，大家思考一下以下题目"></a>根据以上算法思想，大家思考一下以下题目</h2><h4 id="40-集合"><a href="#40-集合" class="headerlink" title="#40. 集合"></a>#40. 集合</h4>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>小伙伴们</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h1 id="小伙伴们"><a href="#小伙伴们" class="headerlink" title="小伙伴们"></a>小伙伴们</h1><blockquote><p><a href="https://hurried1y.github.io/">Hurried1y</a></p><p>“了了青山见，纷纷宿雾空”</p></blockquote><blockquote><p><a href="https://oxdl.cn/">看起来圆滚滚的方糖</a></p><p>“看起来圆滚滚的方糖”</p></blockquote><h1 id="你可以在哪找到我"><a href="#你可以在哪找到我" class="headerlink" title="你可以在哪找到我"></a>你可以在哪找到我</h1><blockquote><p><a href="https://blog.csdn.net/qq_60775360?type=blog">CSDN</a></p></blockquote><blockquote><p><a href="https://github.com/zeitspeed/">Github</a></p></blockquote><blockquote><p><a href="https://home.cnblogs.com/u/yxisme">博客园</a></p></blockquote><h1 id="欢迎在大家在评论里给出友链互加好友"><a href="#欢迎在大家在评论里给出友链互加好友" class="headerlink" title="欢迎在大家在评论里给出友链互加好友"></a>欢迎在大家在评论里给出友链互加好友</h1><h3 id="添加我友链的方式："><a href="#添加我友链的方式：" class="headerlink" title="添加我友链的方式："></a>添加我友链的方式：</h3><p>申请前请先添加本站到您站点的友链中</p><p>留言格式如下：</p><blockquote><p>“name”: “yxisme”,<br>“link”: “<a href="https://yxisme.com/&quot;">https://yxisme.com/&quot;</a>,<br>“avatar”: “<a href="https://yxisme.com/image/zb.jpg/&quot;">https://yxisme.com/image/zb.jpg/&quot;</a>,<br>“descr”: “01100_10111”</p></blockquote>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>留言板</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="这是一块留言板，欢迎评论！🥳🥳"><a href="#这是一块留言板，欢迎评论！🥳🥳" class="headerlink" title="这是一块留言板，欢迎评论！🥳🥳"></a>这是一块留言板，欢迎评论！🥳🥳</h2><p>感谢有你！</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>关 于 我</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h1 id="一名现役ACMer蒟蒻的blog-🥰"><a href="#一名现役ACMer蒟蒻的blog-🥰" class="headerlink" title="一名现役ACMer蒟蒻的blog 🥰"></a>一名现役<del>ACMer</del>蒟蒻的blog 🥰</h1><h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>⭐<strong>一名大二在读，<del>小二刺螈</del>；</strong></p><h2 id="在本站你可以看到："><a href="#在本站你可以看到：" class="headerlink" title="在本站你可以看到："></a>在本站你可以看到：</h2><p>⚡<strong>一些题解；</strong></p><p>⚡<strong>我的生活分享；</strong></p><p>⚡<strong>acm以外的一些项目；</strong></p><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><p>💡<strong>本站是基于hexo框架 + github静态页面搭建的个人博客，主题为Fluid；</strong></p><p>💡<strong>欢迎点击页尾GitHub图标 Follow me ❤️；</strong></p>]]></content>
    
  </entry>
  
  
  
</search>
