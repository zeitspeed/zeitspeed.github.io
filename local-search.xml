<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>好想去珠海航展啊</title>
    <link href="/2022/11/16/%E5%90%90%E6%A7%BD/"/>
    <url>/2022/11/16/%E5%90%90%E6%A7%BD/</url>
    
    <content type="html"><![CDATA[<p>去年没去成，今年还是没去成，这傻鸟疫情😭</p><p>希望明年能去！🌏</p><p>博客的分类也该提上日程了，好多事要做。。</p>]]></content>
    
    
    <categories>
      
      <category>日常</category>
      
    </categories>
    
    
    <tags>
      
      <tag>吐槽</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>实验室第二次讲课</title>
    <link href="/2022/11/10/%E7%95%99%E8%A8%80%E6%9D%BF/"/>
    <url>/2022/11/10/%E7%95%99%E8%A8%80%E6%9D%BF/</url>
    
    <content type="html"><![CDATA[<h1 id="实验室第二次讲课"><a href="#实验室第二次讲课" class="headerlink" title="实验室第二次讲课"></a>实验室第二次讲课</h1><h1 id="47-时间转换"><a href="#47-时间转换" class="headerlink" title="#47. 时间转换"></a>#47. 时间转换</h1><h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>给定一个以秒为单位的时间t，要求用的格式来表示这个时间。<code>&lt;H&gt;</code>表示时间，<code>&lt;M&gt;</code>表示分钟，而表示秒，它们都是整数且没有前导的“0”。例如，若t&#x3D;0，则应输出是“”；若t&#x3D;3661，则输出“”。</p><h2 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入只有一行，是一个整数t（0&lt;&#x3D;t&lt;&#x3D;86399）。</p><h2 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出只有一行，是以“”的格式所表示的时间，不包括引号。</p><h2 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1"><a href="#输入数据-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">0<br></code></pre></td></tr></table></figure><h2 id="输出数据-1"><a href="#输出数据-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">0:0:0<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">int</span> t;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;t);<br>    <span class="hljs-type">int</span> hh,mm,tt;<br>    tt=t%<span class="hljs-number">60</span>;<br>    mm=((t-tt)%<span class="hljs-number">3600</span>)/<span class="hljs-number">60</span>;<span class="hljs-comment">//求余后单位为秒，需要转化为分</span><br>    hh=t/<span class="hljs-number">3600</span>;<span class="hljs-comment">//利用向下取整的特性直接求时</span><br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d:%d:%d&quot;</span>,hh,mm,tt);<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="18-ABC比大小"><a href="#18-ABC比大小" class="headerlink" title="#18. ABC比大小"></a>#18. ABC比大小</h1><h2 id="说明-1"><a href="#说明-1" class="headerlink" title="说明"></a>说明</h2><p>这道题很简单，输入三个数字，只需按照他们的大小排好序就行。</p><h2 id="输入格式-1"><a href="#输入格式-1" class="headerlink" title="输入格式"></a>输入格式</h2><ul><li>第一行随机输入三个整数ABC（0&lt;&#x3D;A,B,C&lt;&#x3D;10000）</li></ul><h2 id="输出格式-1"><a href="#输出格式-1" class="headerlink" title="输出格式"></a>输出格式</h2><ul><li>将A,B,C按照从小到大的顺序输出即可每个数字直接用空格隔开。</li></ul><h2 id="样例-1"><a href="#样例-1" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-1"><a href="#输入数据-1-1" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">2 3 1<br></code></pre></td></tr></table></figure><h2 id="输出数据-1-1"><a href="#输出数据-1-1" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">1 2 3<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//分支选择写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> A, B, C;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>,&amp;A,&amp;B,&amp;C);<br><span class="hljs-keyword">if</span> (A &lt; B) &#123;<br><span class="hljs-keyword">if</span> (B &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, A, B, C);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (A &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, A, C, B);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, C, A, B);<br>&#125;<br>&#125;<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (C &lt; B) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, C, B, A);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-keyword">if</span> (A &lt; C) &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, B, A, C);<br>&#125; <span class="hljs-keyword">else</span> &#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d %d&quot;</span>, B, C, A);<br>&#125;<br>&#125;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//排序写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span>&#123;<br>    <span class="hljs-type">int</span> a[<span class="hljs-number">4</span>];<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a[i]);<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<span class="hljs-comment">//冒泡排序</span><br>      <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">3</span>-i<span class="hljs-number">-1</span>;j++)&#123;<br>        <span class="hljs-keyword">if</span>(a[j]&gt;a[j+<span class="hljs-number">1</span>])&#123;<br>           <span class="hljs-type">int</span> temp=a[j];<br>           a[j]=a[j+<span class="hljs-number">1</span>];<br>           a[j+<span class="hljs-number">1</span>]=temp;<br>    &#125;<br>  &#125;<br>&#125;<span class="hljs-comment">//(进阶：推荐学习sort排序)</span><br>  <br> <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">3</span>;i++)&#123;<br>        <span class="hljs-keyword">if</span>(i&lt;<span class="hljs-number">2</span>)<span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,a[i]);<br>        <span class="hljs-keyword">else</span> <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,a[i]);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs c++"><br></code></pre></td></tr></table></figure><h1 id="24-求平均分"><a href="#24-求平均分" class="headerlink" title="#24. 求平均分"></a>#24. 求平均分</h1><h2 id="说明-2"><a href="#说明-2" class="headerlink" title="说明"></a>说明</h2><p>求平均分和最高分最低分，一直是老师的一份简单而又头疼的工作，数量多，容易算错，现在我们编写一个程序来帮助老师求平均分、最高分和最低分吧。</p><h2 id="输入格式-2"><a href="#输入格式-2" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入N个学生(1&lt;&#x3D;N &lt;&#x3D;10000),以下N行输入N个学生的成绩，成绩含有整数和小数。</p><h2 id="输出格式-2"><a href="#输出格式-2" class="headerlink" title="输出格式"></a>输出格式</h2><p>第一行输出最低分和最高分，最低分最高分之间用一个空格隔开，若成绩为小数则向上取整，例如89.4输出90，</p><p>第二行输出平均分。</p><p>注意，平均成绩保留两位小数哦。</p><h2 id="样例-2"><a href="#样例-2" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-2"><a href="#输入数据-1-2" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs input1">5<br>90<br>85<br>73<br>88<br>71<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-2"><a href="#输出数据-1-2" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs output1">71 90<br>81.40<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h2><p>测试点1：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs none">5<br>90<br>85<br>73<br>88<br>71<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><p>测试点2：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs none">1<br>99<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><p>测试点3：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs none">100<br>7 49 73 58 30 72 44 78 23 9 40 65 92 42 87 3 27 29 40.5 12 3<br>69 9 57 60 33 99 78 16 35 97 26 12 67 10 33 79 49 79 21 67 72 <br>93 36 85 45 28 91 94 57 1 53.5 8 44 68.5 90.5 24 96 30 3 22 <br>66.5 49 24 1 53 77 8 28 33 98 81 35.5 13 65 14 63 36 25 69 15 <br>94 29 1 17 95 5 4 51 98 88.5 23 5 82 52 66 16 37 38 44 <br>测试点3答案为<br>1 99<br>46.21<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;math.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br><span class="hljs-type">int</span> n,i;<br><span class="hljs-type">float</span> score,max,min,sum,average;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-keyword">for</span> (i=<span class="hljs-number">1</span>;i&lt;=n;i++)&#123;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%f&quot;</span>,&amp;score);<br><span class="hljs-keyword">if</span>(i==<span class="hljs-number">1</span>)&#123;<span class="hljs-comment">//当i=1时，为变量赋初值</span><br>max=score;<br>min=score;<br>sum=score;<br>&#125;<span class="hljs-keyword">else</span>&#123;<br>sum+=score;<br><span class="hljs-keyword">if</span> (score&gt;max)&#123;<br>max=score;<br>&#125;<span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(score&lt;min)&#123;<br>min=score;<br>&#125;<br>&#125;<br>&#125;<br>average=sum/n;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%.0f %.0f\n%.2f&quot;</span>,<span class="hljs-built_in">ceil</span>(min),<span class="hljs-built_in">ceil</span>(max),average);<br>    <span class="hljs-comment">//ceil():向上取整函数,相对的floor():向下取整函数</span><br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>; <br>&#125;<br></code></pre></td></tr></table></figure><h1 id="26-能被7和11整除的数字"><a href="#26-能被7和11整除的数字" class="headerlink" title="#26. 能被7和11整除的数字"></a>#26. 能被7和11整除的数字</h1><h2 id="说明-3"><a href="#说明-3" class="headerlink" title="说明"></a>说明</h2><p>有一种神奇的数字，我们暂且叫它“7数”吧，它能被7或者11整除或者同时被它俩整除，让我们找出这些数字。</p><h2 id="输入格式-3"><a href="#输入格式-3" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一个数字N(1&lt;&#x3D;N&lt;&#x3D;10000)，找出不比它大的所有“7数”。若没有这个数，则输出-1。</p><h2 id="输出格式-3"><a href="#输出格式-3" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出所有“7数”，每个“7数”之间用空格隔开，末尾不能有多余的空格。</p><h2 id="样例-3"><a href="#样例-3" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-3"><a href="#输入数据-1-3" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">60<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-3"><a href="#输出数据-1-3" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">7 11 14 21 22 28 33 35 42 44 49 55 56<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span> <span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-type">int</span> a;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;a);<br>    <span class="hljs-keyword">if</span> (a&lt;<span class="hljs-number">7</span>)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d&quot;</span>,<span class="hljs-number">-1</span>);<br>    &#125;<span class="hljs-keyword">else</span>&#123;<br>        <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= a; ++i)&#123;<br>            <span class="hljs-keyword">if</span> (i%<span class="hljs-number">7</span> == <span class="hljs-number">0</span> || i%<span class="hljs-number">11</span> == <span class="hljs-number">0</span>)&#123;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d &quot;</span>,i);<br>            &#125;<br>        &#125;<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span> ;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="29-数字的判断"><a href="#29-数字的判断" class="headerlink" title="#29. 数字的判断"></a>#29. 数字的判断</h1><h2 id="说明-4"><a href="#说明-4" class="headerlink" title="说明"></a>说明</h2><p>给出一个不多于5位数的整数，要求</p><ul><li>求出它是几位数</li><li>分别输出每一位数字</li><li>按逆序输出各位数字，例如原数为321,应输出123</li></ul><h2 id="输入格式-4"><a href="#输入格式-4" class="headerlink" title="输入格式"></a>输入格式</h2><p>一个不大于5位的数字N(1&lt;&#x3D;N&lt;&#x3D;99999)</p><h2 id="输出格式-4"><a href="#输出格式-4" class="headerlink" title="输出格式"></a>输出格式</h2><p><strong>输出一共分三行</strong></p><ul><li>第一行 位数</li><li>第二行 用空格分开的每个数字，注意最后一个数字后没有空格</li><li>第三行 按逆序输出这个数</li></ul><h2 id="样例-4"><a href="#样例-4" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-4"><a href="#输入数据-1-4" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">12345<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-4"><a href="#输出数据-1-4" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs output1">5<br>1 2 3 4 5<br>54321<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//字符串解法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> &#123;<br>    <span class="hljs-type">char</span> a[<span class="hljs-number">10</span>]=<span class="hljs-string">&quot;\0&quot;</span>;<br>    gets(a);<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d\n&quot;</span>, <span class="hljs-built_in">strlen</span>(a));<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-built_in">strlen</span>(a)<span class="hljs-number">-1</span>; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c &quot;</span>, a[i]);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c\n&quot;</span>,a[<span class="hljs-built_in">strlen</span>(a)<span class="hljs-number">-1</span>]);<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-built_in">strlen</span>(a) - <span class="hljs-number">1</span>; i &gt;= <span class="hljs-number">0</span>; i--) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, a[i]);<br>    &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="根据以上算法思想，大家思考一下以下题目"><a href="#根据以上算法思想，大家思考一下以下题目" class="headerlink" title="根据以上算法思想，大家思考一下以下题目"></a>根据以上算法思想，大家思考一下以下题目</h2><h4 id="4-digit-函数"><a href="#4-digit-函数" class="headerlink" title="4. digit 函数"></a>4. digit 函数</h4><h1 id="28-超级三角形"><a href="#28-超级三角形" class="headerlink" title="#28. 超级三角形"></a>#28. 超级三角形</h1><h2 id="说明-5"><a href="#说明-5" class="headerlink" title="说明"></a>说明</h2><p>超级三角形，让我按照自己喜欢的样式来打印漂亮的三角形吧，这个三角形是等腰三角形，而且团可以定制哦。</p><h2 id="输入格式-5"><a href="#输入格式-5" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入一个 n(1&lt;&#x3D;n&lt;&#x3D;15) 和一个 图案c 。</p><h2 id="输出格式-5"><a href="#输出格式-5" class="headerlink" title="输出格式"></a>输出格式</h2><p>第一行1个图案c</p><p>第二行3个图案c</p><p>按照规则输出三角形！</p><h2 id="样例-5"><a href="#样例-5" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-5"><a href="#输入数据-1-5" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">5 a<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-5"><a href="#输出数据-1-5" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs output1">    a<br>   aaa<br>  aaaaa<br> aaaaaaa<br>aaaaaaaaa<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> i, n, j = <span class="hljs-number">1</span>, a = <span class="hljs-number">1</span>, c;<br>    <span class="hljs-type">char</span> t;<br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d %c&quot;</span>, &amp;n,&amp;t);<br>    c = n;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= n; i++) &#123;<span class="hljs-comment">//行控制</span><br>        <span class="hljs-keyword">while</span> (a &lt;= c - <span class="hljs-number">1</span>) &#123;<span class="hljs-comment">//注意观察空格规律，不要多打</span><br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot; &quot;</span>);<br>            a++;<br>        &#125;<br>        c--;<br>        j = <span class="hljs-number">1</span>;<br>        <span class="hljs-keyword">while</span> (j &lt;= (<span class="hljs-number">2</span> * i) - <span class="hljs-number">1</span>) &#123;<br>            <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,t);<br>            j++;<br>        &#125;<br>        a = <span class="hljs-number">1</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="34-能生的小兔子"><a href="#34-能生的小兔子" class="headerlink" title="#34. 能生的小兔子"></a>#34. 能生的小兔子</h1><h2 id="说明-6"><a href="#说明-6" class="headerlink" title="说明"></a>说明</h2><p>十九世纪七十年代，有人从外地带来了一对兔子到澳大利亚。兔子瞬间患难成灾。这些小兔子每3个月就会生一对小兔子，往后的每个月都会生一对小兔子。在理想的情况下（兔子不死）。我们来算算在第N个月后澳大利亚会有多少对兔子。</p><h2 id="输入格式-6"><a href="#输入格式-6" class="headerlink" title="输入格式"></a>输入格式</h2><p>输入月份N(1&lt;&#x3D;N&lt;&#x3D;50)</p><h2 id="输出格式-6"><a href="#输出格式-6" class="headerlink" title="输出格式"></a>输出格式</h2><p>输出每个月兔子的对数，中间用空格隔开。不用考虑末尾的空格。</p><h2 id="样例-6"><a href="#样例-6" class="headerlink" title="样例"></a>样例</h2><h2 id="输入数据-1-6"><a href="#输入数据-1-6" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs input1">8<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-6"><a href="#输出数据-1-6" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">1 1 2 3 5 8 13 21<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//知识点：斐波那契数列</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br>    <span class="hljs-type">int</span> n;<br>    <span class="hljs-type">long</span> <span class="hljs-type">long</span> a[<span class="hljs-number">50</span>]=&#123;<span class="hljs-number">1</span>&#125;;<span class="hljs-comment">//需要使用long long,在47后会超过int范围；</span><br>    <span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br>    a[<span class="hljs-number">0</span>]=<span class="hljs-number">1</span>,a[<span class="hljs-number">1</span>]=<span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">2</span>;i&lt;n;i++)&#123;<br>     a[i]=a[i<span class="hljs-number">-1</span>]+a[i<span class="hljs-number">-2</span>];<br>    &#125;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%lld &quot;</span> , a[i]);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><h1 id="46-找众数"><a href="#46-找众数" class="headerlink" title="#46. 找众数"></a>#46. 找众数</h1><h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>由于菜菜子比较菜，所以出了一道很菜很菜的题目。</p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>菜菜子拥有一个由正整数组成的序列，需要你从中找出众数（众数是在一组数据中,出现次数最多的数据）</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>第一行给定一个正整数n<em>n</em>, 满足 3\leq n\leq 10003≤<em>n</em>≤1000 . 第二行输入由n<em>n</em>个正整数组成的序列。序列里的数x<em>x</em>满足0\leq x\leq 1000000≤<em>x</em>≤100000</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>输出序列中的众数x_{mode}<em>x<strong>m</strong>o<strong>d</strong>e</em>和该数出现的次数count\left(x_{mode}\right)<em>co<strong>u</strong>n**t</em>(<em>x<strong>m</strong>o<strong>d</strong>e</em>)，如果由多个相同数量的众数则输出最大的众数（显然必定唯一）。</p><h2 id="输入数据-1-7"><a href="#输入数据-1-7" class="headerlink" title="输入数据 1"></a>输入数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs input1">7<br>1 4 3 3 2 2 3<br></code></pre></td></tr></table></figure><p><a href="javascript:;">Copy</a></p><h2 id="输出数据-1-7"><a href="#输出数据-1-7" class="headerlink" title="输出数据 1"></a>输出数据 1</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs output1">3 3<br></code></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-comment">//c语言桶排序写法</span><br><span class="hljs-comment">//！！注意：桶排序只能用于数值范围小且集中的情况；</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> a[<span class="hljs-number">100005</span>]=&#123;<span class="hljs-number">0</span>&#125;;<br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span>&#123;<br><span class="hljs-type">int</span> pos=<span class="hljs-number">0</span>;<br><span class="hljs-type">int</span> n;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;n);<br><span class="hljs-keyword">while</span>(n--)&#123;<br><span class="hljs-type">int</span> aa;<br><span class="hljs-built_in">scanf</span>(<span class="hljs-string">&quot;%d&quot;</span>,&amp;aa);<br>a[aa]++;<br>&#125;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">1</span>;i&lt;=<span class="hljs-number">100000</span>;++i)&#123;<br><span class="hljs-keyword">if</span>(a[pos]&lt;=a[i])pos=i;<br>&#125;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%d %d&quot;</span>,pos,a[pos]);<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs c++"><span class="hljs-comment">//c++写法</span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;bits/stdc++.h&gt;</span></span><br><span class="hljs-keyword">using</span> <span class="hljs-keyword">namespace</span> std;<br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span></span>&#123;<br>    map&lt;<span class="hljs-type">int</span>,<span class="hljs-type">int</span>&gt;a;<span class="hljs-comment">//</span><br>    <span class="hljs-type">int</span> n;<br>    cin&gt;&gt;n;<br>    <span class="hljs-type">int</span> m;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;n;i++)&#123;<br>        cin&gt;&gt;m;<br>        a[m]++;<br>    &#125;<br>    <span class="hljs-type">int</span> maxv=<span class="hljs-number">-1</span>;<br>    <span class="hljs-type">int</span> p=<span class="hljs-number">0</span>;<br>    map&lt;<span class="hljs-type">int</span>, <span class="hljs-type">int</span>&gt;::iterator iter;<br>    iter=a.<span class="hljs-built_in">begin</span>();<br>    <span class="hljs-keyword">while</span>(iter!=a.<span class="hljs-built_in">end</span>())&#123;<br>        maxv=<span class="hljs-built_in">max</span>(iter-&gt;second,maxv);<br>        <span class="hljs-keyword">if</span>(maxv==iter-&gt;second)p=iter-&gt;first;<br>        iter++;<br>    &#125;<br>    cout&lt;&lt;p&lt;&lt;<span class="hljs-string">&#x27; &#x27;</span>&lt;&lt;maxv;<br>&#125;<br></code></pre></td></tr></table></figure><h2 id="根据以上算法思想，大家思考一下以下题目-1"><a href="#根据以上算法思想，大家思考一下以下题目-1" class="headerlink" title="根据以上算法思想，大家思考一下以下题目"></a>根据以上算法思想，大家思考一下以下题目</h2><h4 id="40-集合"><a href="#40-集合" class="headerlink" title="#40. 集合"></a>#40. 集合</h4>]]></content>
    
    
    
  </entry>
  
  
  
  
  
  
  <entry>
    <title>关 于 我</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>留言板</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h2 id="这是一块留言板，欢迎评论！🥳🥳"><a href="#这是一块留言板，欢迎评论！🥳🥳" class="headerlink" title="这是一块留言板，欢迎评论！🥳🥳"></a>这是一块留言板，欢迎评论！🥳🥳</h2><p>感谢有你！</p>]]></content>
    
  </entry>
  
  
  
  <entry>
    <title>小伙伴们</title>
    <link href="/"/>
    <url>/</url>
    
    <content type="html"><![CDATA[<h1 id="小伙伴们"><a href="#小伙伴们" class="headerlink" title="小伙伴们"></a>小伙伴们</h1><blockquote><p><a href="https://hurried1y.github.io/">Hurried1y</a></p><p>“了了青山见，纷纷宿雾空”</p></blockquote><blockquote><p><a href="https://oxdl.cn/">看起来圆滚滚的方糖</a></p><p>“看起来圆滚滚的方糖”</p></blockquote><h1 id="你可以在哪找到我"><a href="#你可以在哪找到我" class="headerlink" title="你可以在哪找到我"></a>你可以在哪找到我</h1><blockquote><p><a href="https://blog.csdn.net/qq_60775360?type=blog">CSDN</a></p></blockquote><blockquote><p><a href="https://github.com/zeitspeed/">Github</a></p></blockquote><blockquote><p><a href="https://home.cnblogs.com/u/yxisme">博客园</a></p></blockquote><h1 id="欢迎在大家在评论里给出友链互加好友"><a href="#欢迎在大家在评论里给出友链互加好友" class="headerlink" title="欢迎在大家在评论里给出友链互加好友"></a>欢迎在大家在评论里给出友链互加好友</h1><h3 id="添加我友链的方式："><a href="#添加我友链的方式：" class="headerlink" title="添加我友链的方式："></a>添加我友链的方式：</h3><p>申请前请先添加本站到您站点的友链中</p><p>留言格式如下：</p><blockquote><p>“name”: “yxisme”,<br>“link”: “<a href="https://yxisme.com/&quot;">https://yxisme.com/&quot;</a>,<br>“avatar”: “<a href="https://yxisme.com/image/zb.jpg/&quot;">https://yxisme.com/image/zb.jpg/&quot;</a>,<br>“descr”: “01100_10111”</p></blockquote>]]></content>
    
  </entry>
  
  
  
</search>
